model User {
  id               String   @id @map("_id")
  stripeCustomerId String?  @unique
  name             String
  email            String
  emailVerified    Boolean
  image            String?
  balanceUsd       Float    @default(0)
  createdAt        DateTime
  updatedAt        DateTime

  sessions     Session[]
  accounts     Account[]
  cards        Card[]
  transactions Transaction[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id @map("_id")
  expiresAt DateTime
  token     String
  ipAddress String?
  userAgent String?
  createdAt DateTime
  updatedAt DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id @map("_id")
  accountId             String
  providerId            String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id @map("_id")
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Card {
  id                    String   @id @map("_id")
  stripePaymentMethodId String   @unique
  brand                 String
  last4                 String
  expMonth              Int
  expYear               Int
  isDefault             Boolean  @default(false)
  createdAt             DateTime
  updatedAt             DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("card")
}

model Transaction {
  id                    String   @id @map("_id")
  type                  String
  status                String
  currency              String   @default("USD")
  amount                Float
  stripePaymentIntentId String?
  stripePayoutId        String?
  stripePaymentMethodId String?
  createdAt             DateTime
  updatedAt             DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("transaction")
}
